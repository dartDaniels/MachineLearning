{"cells":[{"cell_type":"markdown","metadata":{"id":"o0BuHAU4ylUi"},"source":["# Домашняя работа. Numpy\n","\n","1. Скачайте этот ноутбук к себе.\n","2. Заполните пропущенные ячейки, отвечая на заданные вопросы. Там должен быть код! (если не сказано обратное)\n","3. Сохраните результат в своём гитхаб репозитории.\n","\n","#### Полезная литература\n","\n","- http://www.numpy.org/\n","- https://jakevdp.github.io/PythonDataScienceHandbook/02.00-introduction-to-numpy.html\n","- https://docs.scipy.org/doc/numpy/user/quickstart.html"]},{"cell_type":"markdown","metadata":{"id":"95vsshCPylUk"},"source":["1) Импортировать numpy и написать версию"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K4riYXoGylUk","executionInfo":{"status":"ok","timestamp":1728385580633,"user_tz":-360,"elapsed":728,"user":{"displayName":"","userId":""}},"outputId":"7b48cb96-d28b-426a-846d-a1b046bdee8c","colab":{"base_uri":"https://localhost:8080/","height":35}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.26.4'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}],"source":["import numpy as np\n","numpy.__version__\n"]},{"cell_type":"markdown","metadata":{"id":"JaWRxgPbylUl"},"source":["2) Создать нулевой вектор размера 10"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OQSQ86xLylUl","executionInfo":{"status":"ok","timestamp":1728385849228,"user_tz":-360,"elapsed":311,"user":{"displayName":"","userId":""}},"outputId":"a3832524-0fe5-4976-9945-8e10e0a50071","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}],"source":["zeroVector = np.array(10)"]},{"cell_type":"markdown","metadata":{"id":"wFnjG-2NylUl"},"source":["3) Создать вектор заполненный 7-ами размера 7"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XRNBSJ_cylUl","executionInfo":{"status":"ok","timestamp":1728386006299,"user_tz":-360,"elapsed":315,"user":{"displayName":"","userId":""}},"outputId":"68765d6b-deee-491e-d940-7a76c32aec39","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[7 7 7 7 7 7 7]\n"]}],"source":["sevensVector = np.array([7,7,7,7,7,7,7])"]},{"cell_type":"markdown","metadata":{"id":"-FUPGOkdylUl"},"source":["4) Создать вектор заполненный четными числами от 10 до 100"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-c3Qpt99ylUl","executionInfo":{"status":"ok","timestamp":1728386161208,"user_tz":-360,"elapsed":415,"user":{"displayName":"","userId":""}},"outputId":"ecd14781-5916-4210-9a6d-076bbabfda25","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[ 10  12  14  16  18  20  22  24  26  28  30  32  34  36  38  40  42  44\n","  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76  78  80\n","  82  84  86  88  90  92  94  96  98 100]\n"]}],"source":["chetVector = np.arange(10,101, 2)\n","print(chetVector)"]},{"cell_type":"markdown","metadata":{"id":"UMA02bLuylUl"},"source":["5) Создать массив случайных чисел и развернуть его задом наперёд"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cIerbu9JylUm","executionInfo":{"status":"ok","timestamp":1728386383138,"user_tz":-360,"elapsed":359,"user":{"displayName":"","userId":""}},"outputId":"598ed43a-8a09-418d-de4c-5b4afe45c10b","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[0.18551915 0.73226635 0.75159744 0.78415719 0.85203856 0.2069378\n"," 0.75210047 0.1483709  0.67891414 0.8087563 ]\n","[0.8087563  0.67891414 0.1483709  0.75210047 0.2069378  0.85203856\n"," 0.78415719 0.75159744 0.73226635 0.18551915]\n"]}],"source":["randomVector = np.random.rand(10)\n","revercedVector = randomVector[::-1]\n","print(randomVector)\n","print(revercedVector)"]},{"cell_type":"markdown","metadata":{"id":"C435oaiXylUm"},"source":["6) Создать двумерную матрицу размера 3 на 3, заполненную числами от 0 до 9"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4Kvej2ZnylUm","executionInfo":{"status":"ok","timestamp":1728386530005,"user_tz":-360,"elapsed":341,"user":{"displayName":"","userId":""}},"outputId":"d34912c3-8b65-4460-b69d-0bbffe646cc9","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0 1 2]\n"," [3 4 5]\n"," [6 7 8]]\n"]}],"source":["matrix = np.arange(9).reshape(3,3)\n","print(matrix)"]},{"cell_type":"markdown","metadata":{"id":"Tl6GpVVUylUm"},"source":["7) Создать матрицу размера 4 на 4 с единицами на диагонали смещеной на один наверх."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Nqn0So4NylUm","executionInfo":{"status":"ok","timestamp":1728386777179,"user_tz":-360,"elapsed":439,"user":{"displayName":"","userId":""}},"outputId":"42c5646d-270a-4124-8adc-8d8c994aebc0","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 1. 0. 0.]\n"," [0. 0. 1. 0.]\n"," [0. 0. 0. 1.]\n"," [0. 0. 0. 0.]]\n"]}],"source":["matrix = np.zeros((4, 4))\n","np.fill_diagonal(matrix[:,1:], 1)\n","print(matrix)"]},{"cell_type":"markdown","metadata":{"id":"HjrEjvldylUm"},"source":["8) Создать матрицу с числами в диапазоне от 1 до 4 по диагонали. В других ячейках матрицы должны быть семерки."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wBA5QgtiylUm","executionInfo":{"status":"ok","timestamp":1728386979764,"user_tz":-360,"elapsed":348,"user":{"displayName":"","userId":""}},"outputId":"06ff70b0-1e5f-432e-95cc-861edf763f83","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 7 7 7]\n"," [7 2 7 7]\n"," [7 7 3 7]\n"," [7 7 7 4]]\n"]}],"source":["matrix = np.full((4, 4), 7)\n","np.fill_diagonal(matrix, [1,2,3,4])\n","print(matrix)"]},{"cell_type":"markdown","metadata":{"id":"dKNq9enKylUm"},"source":["9) Создать матрицу размера 5 на 5 заполненную чилами от 0 до 4 в строках."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xGFRZ-iSylUm","executionInfo":{"status":"ok","timestamp":1728387271766,"user_tz":-360,"elapsed":380,"user":{"displayName":"","userId":""}},"outputId":"7795e7a1-cd54-4255-af88-99c563e32f1b","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 1. 2. 3. 4.]\n"," [0. 1. 2. 3. 4.]\n"," [0. 1. 2. 3. 4.]\n"," [0. 1. 2. 3. 4.]\n"," [0. 1. 2. 3. 4.]]\n"]}],"source":["matrix = np.zeros((5,5))\n","matrix += np.arange(5)\n","print(matrix)"]},{"cell_type":"markdown","metadata":{"id":"w79r3I2LylUm"},"source":["10) Создать матрицу случайных чисел размера 10 на 10 и отнять среднее по строкам из каждого элемента строки"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oRRKsnE-ylUm","executionInfo":{"status":"ok","timestamp":1728387743237,"user_tz":-360,"elapsed":342,"user":{"displayName":"","userId":""}},"outputId":"77ab01d3-a408-4b9d-9fd5-bb2ec4db0eaf","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[0.42809558 0.53017336 0.47589749 0.53367825 0.38888769 0.5475728\n"," 0.47336855 0.55710653 0.42746484 0.42046819]\n","[[0.323223   0.31011941 0.64247942 0.66179227 0.9992666  0.1503749\n","  0.33843355 0.39636625 0.12911286 0.32978754]\n"," [0.73088612 0.38645694 0.14512987 0.95198775 0.56337854 0.34498479\n","  0.43847977 0.09591753 0.87445036 0.77006197]\n"," [0.54095211 0.56279636 0.73940936 0.19379314 0.96531797 0.75637439\n","  0.15178373 0.09795336 0.48703877 0.2635557 ]\n"," [0.60299721 0.78127866 0.55553011 0.22866446 0.65343736 0.45510911\n","  0.55259743 0.84015143 0.33648818 0.3305285 ]\n"," [0.45724875 0.25700593 0.27097853 0.10294279 0.58127972 0.43182599\n","  0.17537887 0.58696516 0.47141201 0.55383913]\n"," [0.94632577 0.99814643 0.27405095 0.36310435 0.88953709 0.29293016\n","  0.49284144 0.78752217 0.10257573 0.3286939 ]\n"," [0.14868388 0.25907838 0.78419962 0.82481825 0.22353831 0.56050631\n","  0.06141412 0.16901036 0.80866927 0.89376703]\n"," [0.90313735 0.2713685  0.32083574 0.30887148 0.96888889 0.30915643\n","  0.57738871 0.73078255 0.31937512 0.86126057]\n"," [0.06993314 0.28465556 0.42368459 0.34126064 0.42622109 0.61790304\n","  0.48971682 0.4485219  0.78328701 0.38946459]\n"," [0.48128218 0.93891343 0.83249615 0.33796679 0.08675227 0.05977702\n","  0.18454846 0.30695245 0.93420727 0.04178589]]\n","[[-0.10487258 -0.11797617  0.21438385  0.23369669  0.57117102 -0.27772067\n","  -0.08966203 -0.03172933 -0.29898272 -0.09830804]\n"," [ 0.20071276 -0.14371643 -0.38504349  0.42181438  0.03320518 -0.18518858\n","  -0.09169359 -0.43425583  0.344277    0.23988861]\n"," [ 0.06505462  0.08689887  0.26351187 -0.28210435  0.48942048  0.2804769\n","  -0.32411376 -0.37794413  0.01114128 -0.21234179]\n"," [ 0.06931897  0.24760041  0.02185187 -0.30501379  0.11975911 -0.07856914\n","   0.01891918  0.30647318 -0.19719007 -0.20314974]\n"," [ 0.06836106 -0.13188176 -0.11790916 -0.2859449   0.19239203  0.04293831\n","  -0.21350882  0.19807747  0.08252432  0.16495144]\n"," [ 0.39875297  0.45057363 -0.27352185 -0.18446845  0.34196429 -0.25464264\n","  -0.05473136  0.23994938 -0.44499707 -0.2188789 ]\n"," [-0.32468468 -0.21429017  0.31083106  0.35144969 -0.24983025  0.08713776\n","  -0.41195443 -0.30435819  0.33530072  0.42039848]\n"," [ 0.34603081 -0.28573803 -0.2362708  -0.24823505  0.41178236 -0.2479501\n","   0.02028217  0.17367601 -0.23773141  0.30415404]\n"," [-0.3575317  -0.14280928 -0.00378024 -0.0862042  -0.00124375  0.1904382\n","   0.06225198  0.02105706  0.35582217 -0.03800025]\n"," [ 0.06081399  0.51844524  0.41202796 -0.0825014  -0.33371593 -0.36069117\n","  -0.23591973 -0.11351574  0.51373908 -0.3786823 ]]\n"]}],"source":["matrix = np.random.rand(10,10)\n","rowMean = matrix.mean(axis=1)\n","newMatrix = matrix - rowMean[: , np.newaxis]\n","print(rowMean)\n","print(matrix)\n","print(newMatrix)"]},{"cell_type":"markdown","metadata":{"id":"rGQUonOfylUn"},"source":["11) Создать матрицу случайных чисел размера 10 на 10 и отнять медиану по столбцам из каждого элемента столбца  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"poCvHCpSylUn","executionInfo":{"status":"ok","timestamp":1728388122924,"user_tz":-360,"elapsed":449,"user":{"displayName":"","userId":""}},"outputId":"91e4979e-7e99-44f0-ba24-54b2a2df07d4","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.77389446 0.93438774 0.70138095 0.42321656 0.19075523 0.63213924\n","  0.03145915 0.66013946 0.60636606 0.46569837]\n"," [0.09349975 0.98451691 0.77953899 0.89500997 0.61823825 0.75417243\n","  0.03394815 0.56691633 0.26744789 0.15311512]\n"," [0.45952436 0.27525467 0.77225414 0.49431835 0.63214193 0.77381119\n","  0.86934926 0.336732   0.47850698 0.26786672]\n"," [0.82742381 0.19994597 0.90105093 0.52560133 0.56026029 0.12548668\n","  0.11636635 0.05333192 0.38572739 0.01203733]\n"," [0.50757537 0.35002272 0.06211357 0.91785461 0.4115578  0.67388049\n","  0.0024923  0.71312009 0.34611623 0.26523826]\n"," [0.79243968 0.59596315 0.44700797 0.54190477 0.45096118 0.32481035\n","  0.75304221 0.56464886 0.49972735 0.52270886]\n"," [0.81583534 0.33801138 0.31785989 0.77253597 0.54391431 0.04977394\n","  0.26263633 0.82432182 0.55262742 0.47158504]\n"," [0.23874951 0.14539613 0.57494429 0.56284743 0.6272858  0.79784432\n","  0.35136035 0.08910766 0.59518228 0.98227424]\n"," [0.51819079 0.24377657 0.40902176 0.21934352 0.55010695 0.20522733\n","  0.62649385 0.20535409 0.67488999 0.97023491]\n"," [0.36309313 0.01065657 0.50144506 0.25316141 0.17492504 0.57639631\n","  0.41540605 0.89423032 0.71985507 0.05688493]]\n","[0.51288308 0.30663303 0.53819468 0.53375305 0.54701063 0.60426778\n"," 0.30699834 0.56578259 0.52617739 0.36678254]\n","[[ 0.26101138  0.62775471  0.16318627 -0.11053649 -0.3562554   0.02787147\n","  -0.27553919  0.09435687  0.08018867  0.09891582]\n"," [-0.41938333  0.67788388  0.24134431  0.36125692  0.07122762  0.14990465\n","  -0.27305019  0.00113373 -0.25872949 -0.21366742]\n"," [-0.05335872 -0.03137835  0.23405946 -0.0394347   0.0851313   0.16954341\n","   0.56235092 -0.22905059 -0.0476704  -0.09891582]\n"," [ 0.31454073 -0.10668705  0.36285625 -0.00815172  0.01324966 -0.4787811\n","  -0.19063199 -0.51245067 -0.14044999 -0.35474522]\n"," [-0.00530771  0.0433897  -0.47608111  0.38410156 -0.13545283  0.06961272\n","  -0.30450604  0.1473375  -0.18006116 -0.10154428]\n"," [ 0.2795566   0.28933013 -0.09118671  0.00815172 -0.09604945 -0.27945743\n","   0.44604387 -0.00113373 -0.02645003  0.15592631]\n"," [ 0.30295226  0.03137835 -0.22033479  0.23878292 -0.00309632 -0.55449384\n","  -0.04436201  0.25853923  0.02645003  0.1048025 ]\n"," [-0.27413357 -0.16123689  0.03674962  0.02909438  0.08027517  0.19357655\n","   0.04436201 -0.47667494  0.0690049   0.61549169]\n"," [ 0.00530771 -0.06285646 -0.12917292 -0.31440953  0.00309632 -0.39904044\n","   0.31949551 -0.36042851  0.1487126   0.60345237]\n"," [-0.14978995 -0.29597646 -0.03674962 -0.28059164 -0.37208559 -0.02787147\n","   0.10840771  0.32844773  0.19367769 -0.30989761]]\n"]}],"source":["matrix = np.random.rand(10,10)\n","medians = np.median(matrix, axis=0)\n","newMatrix = matrix - medians\n","print(matrix)\n","print(medians)\n","print(newMatrix)"]},{"cell_type":"markdown","metadata":{"id":"rqI1IU6gylUn"},"source":["12) Создать матрицу случайных чисел 5x5. Добавить к ней столбецы максимумов и минимумов по строкам. Получится матрица 5x7.  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kVkSwJxkylUn","executionInfo":{"status":"ok","timestamp":1728388354677,"user_tz":-360,"elapsed":520,"user":{"displayName":"","userId":""}},"outputId":"df7decb6-d850-4e4e-ba31-0ff0f9b6592e","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.23683339 0.68500175 0.09896969 0.78509443 0.89706253]\n"," [0.22524573 0.368342   0.08218931 0.40362995 0.71659637]\n"," [0.82071316 0.87212112 0.91176489 0.4430075  0.41951734]\n"," [0.37879678 0.28804441 0.62790794 0.74638323 0.14248002]\n"," [0.36017508 0.32636267 0.80607877 0.84714405 0.78892209]]\n","[[0.23683339 0.68500175 0.09896969 0.78509443 0.89706253 0.89706253\n","  0.09896969]\n"," [0.22524573 0.368342   0.08218931 0.40362995 0.71659637 0.71659637\n","  0.08218931]\n"," [0.82071316 0.87212112 0.91176489 0.4430075  0.41951734 0.91176489\n","  0.41951734]\n"," [0.37879678 0.28804441 0.62790794 0.74638323 0.14248002 0.74638323\n","  0.14248002]\n"," [0.36017508 0.32636267 0.80607877 0.84714405 0.78892209 0.84714405\n","  0.32636267]]\n"]}],"source":["matrix = np.random.rand(5,5)\n","print(matrix)\n","max = matrix.max(axis=1)\n","min = matrix.min(axis=1)\n","newMatrix = np.column_stack((matrix, max, min))\n","print(newMatrix)"]},{"cell_type":"markdown","metadata":{"id":"_BuAC6S0ylUn"},"source":["13) Вектор чисел от 1 до 51 преобразовать в вектор нечетных чисел и в вектор четных чисел, поменять их размерности, чтобы получились две матрица. Найти произведение этих матриц. Найти обратную матрицу эётого произведения.  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8FNXC8FDylUn","executionInfo":{"status":"ok","timestamp":1728389251314,"user_tz":-360,"elapsed":400,"user":{"displayName":"","userId":""}},"outputId":"07da0973-f675-440f-a4fb-db656141ad06","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  3  5  7  9]\n"," [11 13 15 17 19]\n"," [21 23 25 27 29]\n"," [31 33 35 37 39]\n"," [41 43 45 47 49]]\n","[[ 2  4  6  8 10]\n"," [12 14 16 18 20]\n"," [22 24 26 28 30]\n"," [32 34 36 38 40]\n"," [42 44 46 48 50]]\n","[[ 750  800  850  900  950]\n"," [1850 2000 2150 2300 2450]\n"," [2950 3200 3450 3700 3950]\n"," [4050 4400 4750 5100 5450]\n"," [5150 5600 6050 6500 6950]]\n","Опеределитель равен 0, обратной матрицы не существует\n"]}],"source":["vector = np.arange(1, 52)\n","nech_vector = vector[vector % 2 != 0][:25]\n","chet_vector = vector[vector % 2 != 1][:25]\n","nechMatrix = nech_vector.reshape(5,5)\n","print(nechMatrix)\n","chetMatrix = chet_vector.reshape(5,5)\n","print(chetMatrix)\n","resultMatrix = np.dot(nechMatrix, chetMatrix)\n","print(resultMatrix)\n","\n","det = np.linalg.det(resultMatrix)\n","\n","if det != 0:\n","  invMatrix = np.linalg.inv(resultMatrix)\n","  print(invMatrix)\n","else:\n","  print(\"Опеределитель равен 0, обратной матрицы не существует\")\n"]},{"cell_type":"markdown","metadata":{"id":"ZYE-rM4AylUn"},"source":["14) Создать 8x8 матрицу и заполнить её в шахматном порядке нулями и единицами."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"biiQubpYylUn","executionInfo":{"status":"ok","timestamp":1728389498720,"user_tz":-360,"elapsed":397,"user":{"displayName":"","userId":""}},"outputId":"09abc4e0-3603-4f64-b14e-42ef02dc2074","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 1. 0. 1. 0. 1. 0. 1.]\n"," [1. 0. 1. 0. 1. 0. 1. 0.]\n"," [0. 1. 0. 1. 0. 1. 0. 1.]\n"," [1. 0. 1. 0. 1. 0. 1. 0.]\n"," [0. 1. 0. 1. 0. 1. 0. 1.]\n"," [1. 0. 1. 0. 1. 0. 1. 0.]\n"," [0. 1. 0. 1. 0. 1. 0. 1.]\n"," [1. 0. 1. 0. 1. 0. 1. 0.]]\n"]}],"source":["matrix = np.zeros((8,8))\n","matrix[1::2, ::2] = 1\n","matrix[::2, 1::2] = 1\n","print(matrix)"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.4"},"colab":{"provenance":[{"file_id":"https://github.com/senior-sigan/omsu_ml/blob/master/01_intro/06-hw-numpy.ipynb","timestamp":1728389529083}]}},"nbformat":4,"nbformat_minor":0}